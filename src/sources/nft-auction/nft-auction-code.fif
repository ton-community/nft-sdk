"TonUtil.fif" include
"Asm.fif" include
// automatically generated from `../stdlib.fc` `./nft-auction.func` incl:`./struct/op-codes.func` incl:`./struct/exit-codes.func` incl:`./struct/math.func` incl:`./struct/msg-utils.func` incl:`./struct/storage.func` incl:`./struct/handles.func` incl:`./struct/get-met.func` 
PROGRAM{
  DECLPROC division
  DECLPROC multiply
  DECLPROC math::get_percent
  DECLPROC init_data
  DECLPROC pack_data
  DECLPROC handle::return_transaction
  DECLPROC handle::try_init_auction
  DECLPROC handle::try_cancel
  DECLPROC handle::end_auction
  DECLPROC handle::new_bid
  92437 DECLMETHOD get_nft_owner
  129371 DECLMETHOD get_nft_addr
  71261 DECLMETHOD get_last_member
  128598 DECLMETHOD get_mp_addr
  112219 DECLMETHOD get_mp_fee_addr
  107302 DECLMETHOD get_royalty_fee_addr
  72370 DECLMETHOD get_fees_info
  106365 DECLMETHOD get_bid_info
  72748 DECLMETHOD get_sale_data
  DECLPROC recv_internal
  DECLPROC recv_external
  DECLGLOBVAR init?
  DECLGLOBVAR end?
  DECLGLOBVAR mp_addr
  DECLGLOBVAR activated?
  DECLGLOBVAR created_at?
  DECLGLOBVAR is_canceled?
  DECLGLOBVAR mp_fee_addr
  DECLGLOBVAR mp_fee_factor
  DECLGLOBVAR mp_fee_base
  DECLGLOBVAR royalty_fee_addr
  DECLGLOBVAR royalty_fee_factor
  DECLGLOBVAR royalty_fee_base
  DECLGLOBVAR min_bid
  DECLGLOBVAR max_bid
  DECLGLOBVAR min_step
  DECLGLOBVAR last_member
  DECLGLOBVAR last_bid
  DECLGLOBVAR last_bid_at
  DECLGLOBVAR end_time
  DECLGLOBVAR step_time
  DECLGLOBVAR try_step_time
  DECLGLOBVAR nft_owner
  DECLGLOBVAR nft_addr
  division PROC:<{
    1000000000 PUSHINT
    SWAP
    MULDIV
  }>
  multiply PROC:<{
    1000000000 PUSHINT
    MULDIV
  }>
  math::get_percent PROC:<{
    -ROT
    multiply CALLDICT
    SWAP
    division CALLDICT
  }>
  init_data PROCREF:<{
    init? GETGLOB
    ISNULL
    IFNOTJMP:<{
    }>
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    end? SETGLOB
    LDMSGADDR
    SWAP
    mp_addr SETGLOB
    1 LDI
    SWAP
    activated? SETGLOB
    32 LDI
    SWAP
    created_at? SETGLOB
    1 LDI
    SWAP
    is_canceled? SETGLOB
    LDREF
    SWAP
    CTOS
    LDMSGADDR
    SWAP
    mp_fee_addr SETGLOB
    32 LDU
    SWAP
    mp_fee_factor SETGLOB
    32 LDU
    SWAP
    mp_fee_base SETGLOB
    LDMSGADDR
    SWAP
    royalty_fee_addr SETGLOB
    32 LDU
    SWAP
    royalty_fee_factor SETGLOB
    32 LDU
    DROP
    royalty_fee_base SETGLOB
    LDREF
    SWAP
    CTOS
    LDVARUINT16
    SWAP
    min_bid SETGLOB
    LDVARUINT16
    SWAP
    max_bid SETGLOB
    LDVARUINT16
    SWAP
    min_step SETGLOB
    LDMSGADDR
    SWAP
    last_member SETGLOB
    LDVARUINT16
    SWAP
    last_bid SETGLOB
    32 LDU
    SWAP
    last_bid_at SETGLOB
    32 LDU
    SWAP
    end_time SETGLOB
    32 LDU
    SWAP
    step_time SETGLOB
    32 LDU
    DROP
    try_step_time SETGLOB
    LDREF
    DROP
    CTOS
    LDMSGADDR
    SWAP
    nft_owner SETGLOB
    LDMSGADDR
    DROP
    nft_addr SETGLOB
    TRUE
    init? SETGLOB
  }>
  pack_data PROCREF:<{
    royalty_fee_base GETGLOB
    royalty_fee_factor GETGLOB
    mp_fee_base GETGLOB
    mp_fee_factor GETGLOB
    NEWC
    mp_fee_addr GETGLOB
    STSLICER
    32 STU
    32 STU
    royalty_fee_addr GETGLOB
    STSLICER
    32 STU
    32 STU
    try_step_time GETGLOB
    step_time GETGLOB
    end_time GETGLOB
    last_bid_at GETGLOB
    NEWC
    min_bid GETGLOB
    STVARUINT16
    max_bid GETGLOB
    STVARUINT16
    min_step GETGLOB
    STVARUINT16
    last_member GETGLOB
    STSLICER
    last_bid GETGLOB
    STVARUINT16
    32 STU
    32 STU
    32 STU
    32 STU
    NEWC
    nft_owner GETGLOB
    STSLICER
    nft_addr GETGLOB
    STSLICER
    ENDC
    SWAP
    ENDC
    s0 s2 XCHG
    ENDC
    is_canceled? GETGLOB
    created_at? GETGLOB
    activated? GETGLOB
    end? GETGLOB
    NEWC
    1 STI
    mp_addr GETGLOB
    STSLICER
    1 STI
    32 STI
    1 STI
    STREF
    s1 s2 XCHG
    STREF
    STREF
    ENDC
    c4 POP
  }>
  handle::return_transaction PROCREF:<{
    0 PUSHINT
    DUP
    24 PUSHINT
    NEWC
    6 STU
    s0 s3 XCHG2
    STSLICER
    OVER
    STVARUINT16
    s1 s2 XCHG
    107 STU
    32 STU
    <b 124 word Your transaction has not been accepted.| $, b> <s PUSHSLICE
    STSLICER
    ENDC
    64 PUSHINT
    SENDRAWMSG
  }>
  handle::try_init_auction PROCREF:<{
    NIP
    1001 PUSHINT
    nft_owner GETGLOB
    SBITS
    2 GTINT
    THROWANYIF
    1002 PUSHINT
    SWAP
    32 LDU
    0x05138d91 PUSHINT
    s1 s2 XCHG
    EQUAL
    s1 s2 XCHG
    THROWANYIFNOT
    64 PUSHINT
    SDSKIPFIRST
    LDMSGADDR
    DROP
    nft_owner SETGLOB
    FALSE
    end? SETGLOB
    TRUE
    activated? SETGLOB
    pack_data INLINECALLDICT
  }>
  handle::try_cancel PROCREF:<{
    1004 PUSHINT
    <b 124 word cancel| $, b> <s PUSHSLICE
    s1 s2 XCHG
    SDEQ
    NOT
    THROWANYIF
    last_bid GETGLOB
    0 GTINT
    IF:<{
      0 PUSHINT
      DUP
      24 PUSHINT
      NEWC
      6 STU
      last_member GETGLOB
      STSLICER
      last_bid GETGLOB
      STVARUINT16
      107 STU
      32 STU
      <b 124 word Your bid has been outbid by another user.| $, b> <s PUSHSLICE
      STSLICER
      ENDC
      2 PUSHINT
      SENDRAWMSG
    }>
    0 PUSHINT
    DUP
    LTIME
    0x5fcc3d14 PUSHINT
    NEWC
    32 STU
    64 STU
    nft_owner GETGLOB
    STSLICER
    nft_owner GETGLOB
    STSLICER
    1 STU
    OVER
    STVARUINT16
    1 STU
    ENDC
    1 PUSHINT
    24 PUSHINT
    NEWC
    6 STU
    nft_addr GETGLOB
    STSLICER
    0 PUSHINT
    STVARUINT16
    107 STU
    STREF
    1000000 PUSHINT
    0 PUSHINT
    RAWRESERVE
    ENDC
    7 PUSHPOW2
    SENDRAWMSG
    TRUE
    end? SETGLOB
    TRUE
    is_canceled? SETGLOB
    pack_data INLINECALLDICT
  }>
  handle::end_auction PROCREF:<{
    last_bid GETGLOB
    0 EQINT
    IF:<{
      0 PUSHINT
      DUP
      LTIME
      0x5fcc3d14 PUSHINT
      NEWC
      32 STU
      64 STU
      nft_owner GETGLOB
      STSLICER
      nft_owner GETGLOB
      STSLICER
      1 STU
      OVER
      STVARUINT16
      1 STU
      ENDC
      1 PUSHINT
      24 PUSHINT
      NEWC
      6 STU
      nft_addr GETGLOB
      STSLICER
      0 PUSHINT
      STVARUINT16
      107 STU
      STREF
      1000000 PUSHINT
      0 PUSHINT
      RAWRESERVE
      ENDC
      7 PUSHPOW2
      SENDRAWMSG
    }>ELSE<{
      0 PUSHINT
      DUP
      LTIME
      0x5fcc3d14 PUSHINT
      NEWC
      32 STU
      64 STU
      last_member GETGLOB
      STSLICER
      nft_owner GETGLOB
      STSLICER
      1 STU
      30000000 PUSHINT
      STVARUINT16
      1 STU
      ENDC
      1 PUSHINT
      24 PUSHINT
      NEWC
      6 STU
      nft_addr GETGLOB
      STSLICER
      1000000000 PUSHINT
      STVARUINT16
      107 STU
      STREF
      ENDC
      2 PUSHINT
      SENDRAWMSG
      last_bid GETGLOB
      mp_fee_factor GETGLOB
      mp_fee_base GETGLOB
      math::get_percent CALLDICT
      DUP
      0 GTINT
      IF:<{
        0 PUSHINT
        DUP
        24 PUSHINT
        NEWC
        6 STU
        mp_fee_addr GETGLOB
        STSLICER
        s0 s3 XCHG2
        STVARUINT16
        s1 s2 XCHG
        107 STU
        32 STU
        <b 124 word Marketplace commission withdraw| $, b> <s PUSHSLICE
        STSLICER
        ENDC
        3 PUSHINT
        SENDRAWMSG
      }>ELSE<{
        DROP
      }>
      last_bid GETGLOB
      royalty_fee_factor GETGLOB
      royalty_fee_base GETGLOB
      math::get_percent CALLDICT
      DUP
      0 GTINT
      IF:<{
        0 PUSHINT
        DUP
        24 PUSHINT
        NEWC
        6 STU
        royalty_fee_addr GETGLOB
        STSLICER
        s0 s3 XCHG2
        STVARUINT16
        s1 s2 XCHG
        107 STU
        32 STU
        <b 124 word Royalty commission withdraw| $, b> <s PUSHSLICE
        STSLICER
        ENDC
        3 PUSHINT
        SENDRAWMSG
      }>ELSE<{
        DROP
      }>
      1000000 PUSHINT
      0 PUSHINT
      RAWRESERVE
      0 PUSHINT
      DUP
      24 PUSHINT
      NEWC
      6 STU
      nft_owner GETGLOB
      STSLICER
      OVER
      STVARUINT16
      107 STU
      32 STU
      <b 124 word Previous owner withdraw| $, b> <s PUSHSLICE
      STSLICER
      ENDC
      7 PUSHPOW2
      SENDRAWMSG
    }>
    TRUE
    end? SETGLOB
    pack_data INLINECALLDICT
  }>
  handle::new_bid PROCREF:<{
    1005 PUSHINT
    end? GETGLOB
    -1 EQINT
    THROWANYIF
    end_time GETGLOB
    NOW
    LESS
    IFJMP:<{
      DROP
      handle::return_transaction INLINECALLDICT
      handle::end_auction INLINECALLDICT
    }>
    max_bid GETGLOB
    0 GTINT
    max_bid GETGLOB
    s2 s(-1) PUXC
    GEQ
    AND
    IFJMP:<{
      last_bid GETGLOB
      IF:<{
        0 PUSHINT
        DUP
        24 PUSHINT
        NEWC
        6 STU
        last_member GETGLOB
        STSLICER
        last_bid GETGLOB
        STVARUINT16
        107 STU
        32 STU
        <b 124 word Your bid has been outbid by another user.| $, b> <s PUSHSLICE
        STSLICER
        ENDC
        2 PUSHINT
        SENDRAWMSG
      }>
      SWAP
      last_member SETGLOB
      last_bid SETGLOB
      NOW
      last_bid_at SETGLOB
      handle::end_auction INLINECALLDICT
    }>
    end_time GETGLOB
    try_step_time GETGLOB
    SUB
    NOW
    LESS
    IF:<{
      end_time GETGLOB
      step_time GETGLOB
      ADD
      end_time SETGLOB
    }>
    last_bid GETGLOB
    IFNOTJMP:<{
      1000 PUSHINT
      min_bid GETGLOB
      s2 s(-1) PUXC
      LESS
      THROWANYIF
      last_bid SETGLOB
      last_member SETGLOB
      NOW
      last_bid_at SETGLOB
      pack_data INLINECALLDICT
    }>
    last_bid GETGLOB
    min_step GETGLOB
    ADD
    s1 s(-1) PUXC
    LESS
    IFJMP:<{
      DROP
      handle::return_transaction INLINECALLDICT
    }>
    0 PUSHINT
    DUP
    24 PUSHINT
    NEWC
    6 STU
    last_member GETGLOB
    STSLICER
    last_bid GETGLOB
    STVARUINT16
    107 STU
    32 STU
    <b 124 word Your bid has been outbid by another user.| $, b> <s PUSHSLICE
    STSLICER
    ENDC
    2 PUSHINT
    SENDRAWMSG
    SWAP
    last_member SETGLOB
    last_bid SETGLOB
    NOW
    last_bid_at SETGLOB
    pack_data INLINECALLDICT
  }>
  get_nft_owner PROC:<{
    init_data INLINECALLDICT
    nft_owner GETGLOB
    SBITS
    3 LESSINT
    IFJMP:<{
      0 PUSHINT
      DUP
    }>
    nft_owner GETGLOB
    REWRITESTDADDR
  }>
  get_nft_addr PROC:<{
    init_data INLINECALLDICT
    nft_addr GETGLOB
    SBITS
    3 LESSINT
    IFJMP:<{
      0 PUSHINT
      DUP
    }>
    nft_addr GETGLOB
    REWRITESTDADDR
  }>
  get_last_member PROC:<{
    init_data INLINECALLDICT
    last_member GETGLOB
    REWRITESTDADDR
  }>
  get_mp_addr PROC:<{
    init_data INLINECALLDICT
    mp_addr GETGLOB
    REWRITESTDADDR
  }>
  get_mp_fee_addr PROC:<{
    init_data INLINECALLDICT
    mp_fee_addr GETGLOB
    REWRITESTDADDR
  }>
  get_royalty_fee_addr PROC:<{
    init_data INLINECALLDICT
    royalty_fee_addr GETGLOB
    REWRITESTDADDR
  }>
  get_fees_info PROC:<{
    init_data INLINECALLDICT
    mp_fee_factor GETGLOB
    mp_fee_base GETGLOB
    royalty_fee_factor GETGLOB
    royalty_fee_base GETGLOB
  }>
  get_bid_info PROC:<{
    init_data INLINECALLDICT
    min_bid GETGLOB
    max_bid GETGLOB
    min_step GETGLOB
    last_bid GETGLOB
    end_time GETGLOB
  }>
  get_sale_data PROC:<{
    init_data INLINECALLDICT
    4281667 PUSHINT
    end? GETGLOB
    end_time GETGLOB
    mp_addr GETGLOB
    nft_addr GETGLOB
    nft_owner GETGLOB
    last_bid GETGLOB
    last_member GETGLOB
    min_step GETGLOB
    mp_fee_addr GETGLOB
    mp_fee_factor GETGLOB
    mp_fee_base GETGLOB
    royalty_fee_addr GETGLOB
    royalty_fee_factor GETGLOB
    royalty_fee_base GETGLOB
    max_bid GETGLOB
    min_bid GETGLOB
    created_at? GETGLOB
    last_bid_at GETGLOB
    is_canceled? GETGLOB
  }>
  recv_internal PROC:<{
    s3 POP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    0 THROWIF
    LDMSGADDR
    DROP
    init_data INLINECALLDICT
    mp_addr GETGLOB
    s1 s(-1) PUXC
    SDEQ
    end? GETGLOB
    AND
    -1 EQINT
    IFJMP:<{
      2DROP
      32 LDU
      OVER
      0 EQINT
      <b 124 word repeat_end_auction| $, b> <s PUSHSLICE
      s2 s(-1) PUXC
      SDEQ
      AND
      IFJMP:<{
        2DROP
        handle::end_auction INLINECALLDICT
      }>
      SWAP
      0 EQINT
      <b 124 word emergency_message| $, b> <s PUSHSLICE
      s2 s(-1) PUXC
      SDEQ
      AND
      IFJMP:<{
        LDREF
        DROP
        CTOS
        8 LDU
        LDREF
        DROP
        SWAP
        SENDRAWMSG
      }>
      DROP
    }>
    nft_addr GETGLOB
    s1 s(-1) PUXC
    SDEQ
    IFJMP:<{
      NIP
      SWAP
      handle::try_init_auction INLINECALLDICT
    }>
    NOW
    end_time GETGLOB
    GEQ
    IFJMP:<{
      2 1 BLKDROP2
      handle::return_transaction INLINECALLDICT
      handle::end_auction INLINECALLDICT
    }>
    end? GETGLOB
    -1 EQINT
    IFJMP:<{
      2 1 BLKDROP2
      handle::return_transaction INLINECALLDICT
    }>
    nft_owner GETGLOB
    s1 s(-1) PUXC
    SDEQ
    mp_addr GETGLOB
    s2 s(-1) PUXC
    SDEQ
    OR
    IFJMP:<{
      NIP
      1003 PUSHINT
      s0 s2 XCHG
      32 LDU
      SWAP
      0 NEQINT
      s1 s3 XCHG
      THROWANYIF
      <b 124 word cancel| $, b> <s PUSHSLICE
      s2 s(-1) PUXC
      SDEQ
      IF:<{
        OVER
        handle::try_cancel INLINECALLDICT
      }>
      <b 124 word stop| $, b> <s PUSHSLICE
      s1 s2 XCHG
      SDEQ
      nft_owner GETGLOB
      s2 s(-1) PUXC
      SDEQ
      AND
      IF:<{
        handle::return_transaction INLINECALLDICT
        handle::end_auction INLINECALLDICT
      }>ELSE<{
        DROP
      }>
    }>
    s2 POP
    handle::new_bid INLINECALLDICT
  }>
  recv_external PROC:<{
    DROP
    init_data INLINECALLDICT
    1006 PUSHINT
    activated? GETGLOB
    -1 EQINT
    THROWANYIF
    ACCEPT
    TRUE
    activated? SETGLOB
    pack_data INLINECALLDICT
  }>
}END>c
